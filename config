# Custom SwayWM configuration
# Read `man 5 sway` for a complete reference.
# Author: Szymon Kubica <szymo.kubica@gmail.com>

### Variables

set $background ~/.config/sway/hexagons.png

set $mod Ctrl
set $mod2 Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu -b -h 24 -q  | xargs swaymsg exec --

set $menu bemenu-run -i -b --line-height=24 --tb='#090909' --tf='#bbbbbb' --fb='#090909' --nb='#090909' --nf='#bbbbbb' --hb='#af0000' --hf='#090909' -p '' --fn="JetBrains Mono Nerd Font 10"

# Setting up the cursor on sway
set $my_cursor Breeze
set $my_cursor_size 24
seat seat0 xcursor_theme $my_cursor $my_cursor_size

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+Space exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod2 normal

    # Reload the configuration file
    bindsym $mod+$mod2+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10


# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod2+h or $mod2+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod2+h splith
    bindsym $mod2+v splitv

    # Switch the current container between different layout styles
    bindsym $mod2+s layout stacking
    bindsym $mod2+w layout tabbed
    bindsym $mod2+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod2+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+$mod2+space floating toggle

    # Toggle the first monitor off
    bindsym $mod+$mod2+d exec swaymsg output eDP-1 disable

    # Swap focus between the tiling area and the floating area
    bindsym $mod+Shift+Space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod2+r mode "resize"



# Screenshot setup.
# capture all screens to clipboard
bindsym Shift+Print exec grim - | wl-copy

# capture the specified screen area to clipboard
bindsym Print exec grim -g "$(slurp)" - | wl-copy

# capture the focused monitor to clipboard
bindsym Shift+Control+Print exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') - | wl-copy


# Colors customisation:
set $cl_high #af0000
set $cl_indi #d9d8d8
set $cl_back #231f20
set $cl_fore #d9d8d8
set $cl_urge #ee2e24

# Colors                border   bg       text     indi     childborder
client.focused          $cl_high $cl_high $cl_fore $cl_indi $cl_high
client.focused_inactive $cl_back $cl_back $cl_fore $cl_back $cl_back
client.unfocused        $cl_back $cl_back $cl_fore $cl_back $cl_back
client.urgent           $cl_urge $cl_urge $cl_fore $cl_urge $cl_urge

# Window borders
default_border pixel 1
default_floating_border none
hide_edge_borders smart

# Smart window gaps
smart_gaps on
gaps inner 5

output * bg $background fill


bindsym $mod2+Space exec --no-startup-id pkill -RTMIN+8 i3blocks

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position bottom

    font "JetBrains Mono Nerd Font 10"

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command i3blocks

    colors {
        statusline #ffffff
        background #09090980
        inactive_workspace #444444 #323232 #dadada
        focused_workspace #090909 #af0000 #090909
    }
}

# Ensures that the volume is displayed on startup.
exec pkill -RTMIN+9 i3blocks

# Sets the window manager name so that JetBrains IDE's work properly.
exec wmname LG3D

include /etc/sway/config.d/input
include /etc/sway/config.d/keybindings/media
include ~/.config/sway/config.d/input
